plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.6'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.backend.test'
version = '1.0.0'

java {
	sourceCompatibility = '17'
}

ext {
	karateVersion = '1.4.1'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mapstruct:mapstruct:1.4.2.Final'
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.15.2'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.amqp:spring-rabbit-test'
	testImplementation "com.intuit.karate:karate-junit5:${karateVersion}"
}

sourceSets {
	test {
		resources {
			srcDir file('src/test/java')
			exclude '**/*.java'
		}
	}
}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
	systemProperty "karate.options", System.properties.getProperty("karate.options")
	systemProperty "karate.env", System.properties.getProperty("karate.env")
	outputs.upToDateWhen { false }
}

task karateDebug(type: JavaExec) {
	classpath = sourceSets.test.runtimeClasspath
	mainClass = 'com.intuit.karate.cli.Main'
}